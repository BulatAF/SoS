//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Code/Controllers/InputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputController"",
    ""maps"": [
        {
            ""name"": ""Move"",
            ""id"": ""47d00232-8866-433d-9b2f-b86773326167"",
            ""actions"": [
                {
                    ""name"": ""Gun"",
                    ""type"": ""Button"",
                    ""id"": ""5639405f-3791-496d-92d4-8337b97329ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""9e927652-318e-4632-80ab-cc83e7d63361"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""6f90c760-7dd2-4bfb-8bf9-7b774b193c7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveY"",
                    ""type"": ""Button"",
                    ""id"": ""00cad66a-50f3-4f65-8ef7-462d0f5ce931"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Monolog"",
                    ""type"": ""Button"",
                    ""id"": ""23b31fd7-85f4-47d4-baa8-124ad8712c73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b6fc6e8d-c93e-4259-9444-9c4cc8176123"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Gun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88d90366-074a-4c09-90f1-83fe1f1974cd"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Gun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""aa972933-2e8d-41af-aa51-2424f222e58d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6f43d08e-932f-4010-b490-8a5f8ad91c1c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d7df64bf-0214-441d-9ed9-b985f0839a23"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2d27b8b6-0186-4d6f-8ec6-d063c90856fd"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""de553b3d-f483-458a-b999-ef204693c30c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""88a13137-2ccc-482c-acdd-e574b650f887"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""08ae852f-48e1-4957-9f4d-ee02d54f8c0f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cc41fa30-d547-4af3-953b-e4a6cf57d646"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""054836fc-371f-4d42-b075-91fe841ad368"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""49480db0-7653-4522-be9c-879322214afa"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2684b094-176a-4822-a8f3-db702ba4ef9b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""923186b1-a44e-4cd3-a1a0-63ce39158243"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""37e81066-959a-4d5f-a261-a063bbb5365a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc069305-b78b-48bb-a756-61eafa075b0a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84c6997b-6227-41b7-a798-e2c2364f218a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""9ed9acc1-18dc-41a0-96cc-69ca49707c7d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d752f6ad-8dd9-493b-bfaa-a03084006933"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c5f69cab-d3d1-43db-b3f3-efc4e551e015"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0572e96d-5916-4432-b613-d803a230a925"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7a6f6b14-5253-4aa4-bcd0-0fd2ef61ad21"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""27659040-11da-41d4-a037-4aaae748f9e4"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""164055ce-360d-474f-92b4-8ab847267ee1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Monolog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d47af7bd-3d03-4f72-a3ce-93b7afbf9088"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Monolog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20c70bdc-25d3-410a-9e01-3b5e4df131a7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Monolog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BlFight"",
            ""id"": ""e8c2295d-9450-41fe-9d94-6b717987a25c"",
            ""actions"": [
                {
                    ""name"": ""ATCL"",
                    ""type"": ""Button"",
                    ""id"": ""9a34c3ca-bfba-4fb3-9e60-21c76a423d8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ATUP"",
                    ""type"": ""Button"",
                    ""id"": ""83998b56-fbe2-42bd-a6bd-16336cef4bad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BLUP"",
                    ""type"": ""Button"",
                    ""id"": ""20969053-954c-4e56-b1d9-1b0a4b84d33e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BLCL"",
                    ""type"": ""Button"",
                    ""id"": ""834dd67c-5519-4804-9b78-518f3b208b21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0c2251df-8009-41f7-b5b5-be7e0c1b4af7"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATCL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82c68703-827a-4ab7-8e6a-4bfe8130c024"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ATCL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dee6f45d-c53b-4357-bc85-6995194264cd"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a10911a0-aceb-4746-a6d5-da2d27699b76"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BLCL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc6f86ab-4271-4277-869a-97c359f000bf"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BLUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3265e000-3362-41d3-85f2-b840f69b68ef"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ATUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd5351ff-b75f-4b61-926b-d01ada757883"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BLUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc1f28b5-e98a-4254-89f4-543045635587"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BLCL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Move
        m_Move = asset.FindActionMap("Move", throwIfNotFound: true);
        m_Move_Gun = m_Move.FindAction("Gun", throwIfNotFound: true);
        m_Move_Reload = m_Move.FindAction("Reload", throwIfNotFound: true);
        m_Move_Move = m_Move.FindAction("Move", throwIfNotFound: true);
        m_Move_MoveY = m_Move.FindAction("MoveY", throwIfNotFound: true);
        m_Move_Monolog = m_Move.FindAction("Monolog", throwIfNotFound: true);
        // BlFight
        m_BlFight = asset.FindActionMap("BlFight", throwIfNotFound: true);
        m_BlFight_ATCL = m_BlFight.FindAction("ATCL", throwIfNotFound: true);
        m_BlFight_ATUP = m_BlFight.FindAction("ATUP", throwIfNotFound: true);
        m_BlFight_BLUP = m_BlFight.FindAction("BLUP", throwIfNotFound: true);
        m_BlFight_BLCL = m_BlFight.FindAction("BLCL", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Move
    private readonly InputActionMap m_Move;
    private IMoveActions m_MoveActionsCallbackInterface;
    private readonly InputAction m_Move_Gun;
    private readonly InputAction m_Move_Reload;
    private readonly InputAction m_Move_Move;
    private readonly InputAction m_Move_MoveY;
    private readonly InputAction m_Move_Monolog;
    public struct MoveActions
    {
        private @InputController m_Wrapper;
        public MoveActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Gun => m_Wrapper.m_Move_Gun;
        public InputAction @Reload => m_Wrapper.m_Move_Reload;
        public InputAction @Move => m_Wrapper.m_Move_Move;
        public InputAction @MoveY => m_Wrapper.m_Move_MoveY;
        public InputAction @Monolog => m_Wrapper.m_Move_Monolog;
        public InputActionMap Get() { return m_Wrapper.m_Move; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoveActions set) { return set.Get(); }
        public void SetCallbacks(IMoveActions instance)
        {
            if (m_Wrapper.m_MoveActionsCallbackInterface != null)
            {
                @Gun.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnGun;
                @Gun.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnGun;
                @Gun.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnGun;
                @Reload.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnReload;
                @Move.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @MoveY.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnMoveY;
                @MoveY.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnMoveY;
                @MoveY.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnMoveY;
                @Monolog.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnMonolog;
                @Monolog.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnMonolog;
                @Monolog.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnMonolog;
            }
            m_Wrapper.m_MoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Gun.started += instance.OnGun;
                @Gun.performed += instance.OnGun;
                @Gun.canceled += instance.OnGun;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @MoveY.started += instance.OnMoveY;
                @MoveY.performed += instance.OnMoveY;
                @MoveY.canceled += instance.OnMoveY;
                @Monolog.started += instance.OnMonolog;
                @Monolog.performed += instance.OnMonolog;
                @Monolog.canceled += instance.OnMonolog;
            }
        }
    }
    public MoveActions @Move => new MoveActions(this);

    // BlFight
    private readonly InputActionMap m_BlFight;
    private IBlFightActions m_BlFightActionsCallbackInterface;
    private readonly InputAction m_BlFight_ATCL;
    private readonly InputAction m_BlFight_ATUP;
    private readonly InputAction m_BlFight_BLUP;
    private readonly InputAction m_BlFight_BLCL;
    public struct BlFightActions
    {
        private @InputController m_Wrapper;
        public BlFightActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @ATCL => m_Wrapper.m_BlFight_ATCL;
        public InputAction @ATUP => m_Wrapper.m_BlFight_ATUP;
        public InputAction @BLUP => m_Wrapper.m_BlFight_BLUP;
        public InputAction @BLCL => m_Wrapper.m_BlFight_BLCL;
        public InputActionMap Get() { return m_Wrapper.m_BlFight; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BlFightActions set) { return set.Get(); }
        public void SetCallbacks(IBlFightActions instance)
        {
            if (m_Wrapper.m_BlFightActionsCallbackInterface != null)
            {
                @ATCL.started -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATCL;
                @ATCL.performed -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATCL;
                @ATCL.canceled -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATCL;
                @ATUP.started -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATUP;
                @ATUP.performed -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATUP;
                @ATUP.canceled -= m_Wrapper.m_BlFightActionsCallbackInterface.OnATUP;
                @BLUP.started -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLUP;
                @BLUP.performed -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLUP;
                @BLUP.canceled -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLUP;
                @BLCL.started -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLCL;
                @BLCL.performed -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLCL;
                @BLCL.canceled -= m_Wrapper.m_BlFightActionsCallbackInterface.OnBLCL;
            }
            m_Wrapper.m_BlFightActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ATCL.started += instance.OnATCL;
                @ATCL.performed += instance.OnATCL;
                @ATCL.canceled += instance.OnATCL;
                @ATUP.started += instance.OnATUP;
                @ATUP.performed += instance.OnATUP;
                @ATUP.canceled += instance.OnATUP;
                @BLUP.started += instance.OnBLUP;
                @BLUP.performed += instance.OnBLUP;
                @BLUP.canceled += instance.OnBLUP;
                @BLCL.started += instance.OnBLCL;
                @BLCL.performed += instance.OnBLCL;
                @BLCL.canceled += instance.OnBLCL;
            }
        }
    }
    public BlFightActions @BlFight => new BlFightActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IMoveActions
    {
        void OnGun(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnMoveY(InputAction.CallbackContext context);
        void OnMonolog(InputAction.CallbackContext context);
    }
    public interface IBlFightActions
    {
        void OnATCL(InputAction.CallbackContext context);
        void OnATUP(InputAction.CallbackContext context);
        void OnBLUP(InputAction.CallbackContext context);
        void OnBLCL(InputAction.CallbackContext context);
    }
}
